/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables;


import com.azure.csu.tiger.product.jooq.Keys;
import com.azure.csu.tiger.product.jooq.ProductCenter;
import com.azure.csu.tiger.product.jooq.tables.records.CouponRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 优惠券表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Coupon extends TableImpl<CouponRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>product_center.coupon</code>
     */
    public static final Coupon COUPON = new Coupon();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CouponRecord> getRecordType() {
        return CouponRecord.class;
    }

    /**
     * The column <code>product_center.coupon.id</code>.
     */
    public final TableField<CouponRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>product_center.coupon.name</code>. 优惠券名称
     */
    public final TableField<CouponRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "优惠券名称");

    /**
     * The column <code>product_center.coupon.description</code>. 优惠券描述
     */
    public final TableField<CouponRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.nullable(false), this, "优惠券描述");

    /**
     * The column <code>product_center.coupon.type</code>. 优惠券类型 满减-0, 折扣-1
     */
    public final TableField<CouponRecord, Byte> TYPE = createField(DSL.name("type"), SQLDataType.TINYINT.nullable(false), this, "优惠券类型 满减-0, 折扣-1");

    /**
     * The column <code>product_center.coupon.condition_amount</code>. 满额数
     */
    public final TableField<CouponRecord, Long> CONDITION_AMOUNT = createField(DSL.name("condition_amount"), SQLDataType.BIGINT, this, "满额数");

    /**
     * The column <code>product_center.coupon.condition_num</code>. 满件数
     */
    public final TableField<CouponRecord, Long> CONDITION_NUM = createField(DSL.name("condition_num"), SQLDataType.BIGINT, this, "满件数");

    /**
     * The column <code>product_center.coupon.reduce_amount</code>. 满减数，单位为分
     */
    public final TableField<CouponRecord, Long> REDUCE_AMOUNT = createField(DSL.name("reduce_amount"), SQLDataType.BIGINT, this, "满减数，单位为分");

    /**
     * The column <code>product_center.coupon.discount</code>. 折扣数，单位百分之
     */
    public final TableField<CouponRecord, Integer> DISCOUNT = createField(DSL.name("discount"), SQLDataType.INTEGER, this, "折扣数，单位百分之");

    /**
     * The column <code>product_center.coupon.start_time</code>. 开始时间
     */
    public final TableField<CouponRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), SQLDataType.LOCALDATETIME(0), this, "开始时间");

    /**
     * The column <code>product_center.coupon.end_time</code>. 结束时间
     */
    public final TableField<CouponRecord, LocalDateTime> END_TIME = createField(DSL.name("end_time"), SQLDataType.LOCALDATETIME(0), this, "结束时间");

    /**
     * The column <code>product_center.coupon.limit_num</code>. 最多领用次数
     */
    public final TableField<CouponRecord, Integer> LIMIT_NUM = createField(DSL.name("limit_num"), SQLDataType.INTEGER, this, "最多领用次数");

    /**
     * The column <code>product_center.coupon.create_time</code>.
     */
    public final TableField<CouponRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.coupon.modify_time</code>.
     */
    public final TableField<CouponRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.coupon.create_user_id</code>.
     */
    public final TableField<CouponRecord, Long> CREATE_USER_ID = createField(DSL.name("create_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>product_center.coupon.modify_user_id</code>.
     */
    public final TableField<CouponRecord, Long> MODIFY_USER_ID = createField(DSL.name("modify_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private Coupon(Name alias, Table<CouponRecord> aliased) {
        this(alias, aliased, null);
    }

    private Coupon(Name alias, Table<CouponRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("优惠券表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>product_center.coupon</code> table reference
     */
    public Coupon(String alias) {
        this(DSL.name(alias), COUPON);
    }

    /**
     * Create an aliased <code>product_center.coupon</code> table reference
     */
    public Coupon(Name alias) {
        this(alias, COUPON);
    }

    /**
     * Create a <code>product_center.coupon</code> table reference
     */
    public Coupon() {
        this(DSL.name("coupon"), null);
    }

    public <O extends Record> Coupon(Table<O> child, ForeignKey<O, CouponRecord> key) {
        super(child, key, COUPON);
    }

    @Override
    public Schema getSchema() {
        return ProductCenter.PRODUCT_CENTER;
    }

    @Override
    public Identity<CouponRecord, Long> getIdentity() {
        return (Identity<CouponRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CouponRecord> getPrimaryKey() {
        return Keys.KEY_COUPON_PRIMARY;
    }

    @Override
    public List<UniqueKey<CouponRecord>> getKeys() {
        return Arrays.<UniqueKey<CouponRecord>>asList(Keys.KEY_COUPON_PRIMARY);
    }

    @Override
    public Coupon as(String alias) {
        return new Coupon(DSL.name(alias), this);
    }

    @Override
    public Coupon as(Name alias) {
        return new Coupon(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Coupon rename(String name) {
        return new Coupon(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Coupon rename(Name name) {
        return new Coupon(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, String, String, Byte, Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Integer, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
