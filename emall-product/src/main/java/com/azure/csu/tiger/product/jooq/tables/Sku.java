/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables;


import com.azure.csu.tiger.product.jooq.Keys;
import com.azure.csu.tiger.product.jooq.ProductCenter;
import com.azure.csu.tiger.product.jooq.tables.records.SkuRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * SKU表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sku extends TableImpl<SkuRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>product_center.sku</code>
     */
    public static final Sku SKU = new Sku();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SkuRecord> getRecordType() {
        return SkuRecord.class;
    }

    /**
     * The column <code>product_center.sku.id</code>.
     */
    public final TableField<SkuRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>product_center.sku.spu_id</code>. SPU id
     */
    public final TableField<SkuRecord, Long> SPU_ID = createField(DSL.name("spu_id"), SQLDataType.BIGINT.nullable(false), this, "SPU id");

    /**
     * The column <code>product_center.sku.name</code>. 商品名称或标题
     */
    public final TableField<SkuRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false), this, "商品名称或标题");

    /**
     * The column <code>product_center.sku.price</code>. 价格，单位为分
     */
    public final TableField<SkuRecord, Long> PRICE = createField(DSL.name("price"), SQLDataType.BIGINT.nullable(false), this, "价格，单位为分");

    /**
     * The column <code>product_center.sku.stock</code>. 库存数量
     */
    public final TableField<SkuRecord, Long> STOCK = createField(DSL.name("stock"), SQLDataType.BIGINT.nullable(false), this, "库存数量");

    /**
     * The column <code>product_center.sku.is_enable</code>. 是否有效 0-否，1-是
     */
    public final TableField<SkuRecord, Byte> IS_ENABLE = createField(DSL.name("is_enable"), SQLDataType.TINYINT.defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否有效 0-否，1-是");

    /**
     * The column <code>product_center.sku.is_deleted</code>. 是否删除 0-否，1-是
     */
    public final TableField<SkuRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否删除 0-否，1-是");

    /**
     * The column <code>product_center.sku.create_time</code>.
     */
    public final TableField<SkuRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.sku.modify_time</code>.
     */
    public final TableField<SkuRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.sku.create_user_id</code>.
     */
    public final TableField<SkuRecord, Long> CREATE_USER_ID = createField(DSL.name("create_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>product_center.sku.modify_user_id</code>.
     */
    public final TableField<SkuRecord, Long> MODIFY_USER_ID = createField(DSL.name("modify_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private Sku(Name alias, Table<SkuRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sku(Name alias, Table<SkuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("SKU表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>product_center.sku</code> table reference
     */
    public Sku(String alias) {
        this(DSL.name(alias), SKU);
    }

    /**
     * Create an aliased <code>product_center.sku</code> table reference
     */
    public Sku(Name alias) {
        this(alias, SKU);
    }

    /**
     * Create a <code>product_center.sku</code> table reference
     */
    public Sku() {
        this(DSL.name("sku"), null);
    }

    public <O extends Record> Sku(Table<O> child, ForeignKey<O, SkuRecord> key) {
        super(child, key, SKU);
    }

    @Override
    public Schema getSchema() {
        return ProductCenter.PRODUCT_CENTER;
    }

    @Override
    public Identity<SkuRecord, Long> getIdentity() {
        return (Identity<SkuRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SkuRecord> getPrimaryKey() {
        return Keys.KEY_SKU_PRIMARY;
    }

    @Override
    public List<UniqueKey<SkuRecord>> getKeys() {
        return Arrays.<UniqueKey<SkuRecord>>asList(Keys.KEY_SKU_PRIMARY);
    }

    @Override
    public Sku as(String alias) {
        return new Sku(DSL.name(alias), this);
    }

    @Override
    public Sku as(Name alias) {
        return new Sku(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Sku rename(String name) {
        return new Sku(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Sku rename(Name name) {
        return new Sku(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, String, Long, Long, Byte, Byte, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
