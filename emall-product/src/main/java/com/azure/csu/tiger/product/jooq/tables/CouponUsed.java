/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables;


import com.azure.csu.tiger.product.jooq.Keys;
import com.azure.csu.tiger.product.jooq.ProductCenter;
import com.azure.csu.tiger.product.jooq.tables.records.CouponUsedRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 优惠券使用记录表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CouponUsed extends TableImpl<CouponUsedRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>product_center.coupon_used</code>
     */
    public static final CouponUsed COUPON_USED = new CouponUsed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CouponUsedRecord> getRecordType() {
        return CouponUsedRecord.class;
    }

    /**
     * The column <code>product_center.coupon_used.id</code>.
     */
    public final TableField<CouponUsedRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>product_center.coupon_used.coupon_id</code>. 优惠券id
     */
    public final TableField<CouponUsedRecord, Long> COUPON_ID = createField(DSL.name("coupon_id"), SQLDataType.BIGINT.nullable(false), this, "优惠券id");

    /**
     * The column <code>product_center.coupon_used.coupon_taken_id</code>. 优惠券领用id
     */
    public final TableField<CouponUsedRecord, Long> COUPON_TAKEN_ID = createField(DSL.name("coupon_taken_id"), SQLDataType.BIGINT.nullable(false), this, "优惠券领用id");

    /**
     * The column <code>product_center.coupon_used.user_id</code>. 用户id
     */
    public final TableField<CouponUsedRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>product_center.coupon_used.order_id</code>. 订单id
     */
    public final TableField<CouponUsedRecord, Long> ORDER_ID = createField(DSL.name("order_id"), SQLDataType.BIGINT.nullable(false), this, "订单id");

    /**
     * The column <code>product_center.coupon_used.used_num</code>. 使用次数-通常每种优惠券一次使用一张
     */
    public final TableField<CouponUsedRecord, Long> USED_NUM = createField(DSL.name("used_num"), SQLDataType.BIGINT.nullable(false), this, "使用次数-通常每种优惠券一次使用一张");

    /**
     * The column <code>product_center.coupon_used.create_time</code>.
     */
    public final TableField<CouponUsedRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private CouponUsed(Name alias, Table<CouponUsedRecord> aliased) {
        this(alias, aliased, null);
    }

    private CouponUsed(Name alias, Table<CouponUsedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("优惠券使用记录表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>product_center.coupon_used</code> table reference
     */
    public CouponUsed(String alias) {
        this(DSL.name(alias), COUPON_USED);
    }

    /**
     * Create an aliased <code>product_center.coupon_used</code> table reference
     */
    public CouponUsed(Name alias) {
        this(alias, COUPON_USED);
    }

    /**
     * Create a <code>product_center.coupon_used</code> table reference
     */
    public CouponUsed() {
        this(DSL.name("coupon_used"), null);
    }

    public <O extends Record> CouponUsed(Table<O> child, ForeignKey<O, CouponUsedRecord> key) {
        super(child, key, COUPON_USED);
    }

    @Override
    public Schema getSchema() {
        return ProductCenter.PRODUCT_CENTER;
    }

    @Override
    public Identity<CouponUsedRecord, Long> getIdentity() {
        return (Identity<CouponUsedRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CouponUsedRecord> getPrimaryKey() {
        return Keys.KEY_COUPON_USED_PRIMARY;
    }

    @Override
    public List<UniqueKey<CouponUsedRecord>> getKeys() {
        return Arrays.<UniqueKey<CouponUsedRecord>>asList(Keys.KEY_COUPON_USED_PRIMARY);
    }

    @Override
    public CouponUsed as(String alias) {
        return new CouponUsed(DSL.name(alias), this);
    }

    @Override
    public CouponUsed as(Name alias) {
        return new CouponUsed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CouponUsed rename(String name) {
        return new CouponUsed(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CouponUsed rename(Name name) {
        return new CouponUsed(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, Long, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
