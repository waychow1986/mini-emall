/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables;


import com.azure.csu.tiger.product.jooq.Keys;
import com.azure.csu.tiger.product.jooq.ProductCenter;
import com.azure.csu.tiger.product.jooq.tables.records.SkuCommentRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 商品评论表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkuComment extends TableImpl<SkuCommentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>product_center.sku_comment</code>
     */
    public static final SkuComment SKU_COMMENT = new SkuComment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SkuCommentRecord> getRecordType() {
        return SkuCommentRecord.class;
    }

    /**
     * The column <code>product_center.sku_comment.id</code>.
     */
    public final TableField<SkuCommentRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>product_center.sku_comment.sku_id</code>. SKU id
     */
    public final TableField<SkuCommentRecord, Long> SKU_ID = createField(DSL.name("sku_id"), SQLDataType.BIGINT.nullable(false), this, "SKU id");

    /**
     * The column <code>product_center.sku_comment.parent_id</code>. 父评论id
     */
    public final TableField<SkuCommentRecord, Long> PARENT_ID = createField(DSL.name("parent_id"), SQLDataType.BIGINT, this, "父评论id");

    /**
     * The column <code>product_center.sku_comment.user_id</code>. 用户id
     */
    public final TableField<SkuCommentRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>product_center.sku_comment.comment</code>. 评论内容
     */
    public final TableField<SkuCommentRecord, String> COMMENT = createField(DSL.name("comment"), SQLDataType.CLOB.nullable(false), this, "评论内容");

    /**
     * The column <code>product_center.sku_comment.create_time</code>.
     */
    public final TableField<SkuCommentRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private SkuComment(Name alias, Table<SkuCommentRecord> aliased) {
        this(alias, aliased, null);
    }

    private SkuComment(Name alias, Table<SkuCommentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品评论表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>product_center.sku_comment</code> table reference
     */
    public SkuComment(String alias) {
        this(DSL.name(alias), SKU_COMMENT);
    }

    /**
     * Create an aliased <code>product_center.sku_comment</code> table reference
     */
    public SkuComment(Name alias) {
        this(alias, SKU_COMMENT);
    }

    /**
     * Create a <code>product_center.sku_comment</code> table reference
     */
    public SkuComment() {
        this(DSL.name("sku_comment"), null);
    }

    public <O extends Record> SkuComment(Table<O> child, ForeignKey<O, SkuCommentRecord> key) {
        super(child, key, SKU_COMMENT);
    }

    @Override
    public Schema getSchema() {
        return ProductCenter.PRODUCT_CENTER;
    }

    @Override
    public Identity<SkuCommentRecord, Long> getIdentity() {
        return (Identity<SkuCommentRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SkuCommentRecord> getPrimaryKey() {
        return Keys.KEY_SKU_COMMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<SkuCommentRecord>> getKeys() {
        return Arrays.<UniqueKey<SkuCommentRecord>>asList(Keys.KEY_SKU_COMMENT_PRIMARY);
    }

    @Override
    public SkuComment as(String alias) {
        return new SkuComment(DSL.name(alias), this);
    }

    @Override
    public SkuComment as(Name alias) {
        return new SkuComment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SkuComment rename(String name) {
        return new SkuComment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SkuComment rename(Name name) {
        return new SkuComment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Long, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
