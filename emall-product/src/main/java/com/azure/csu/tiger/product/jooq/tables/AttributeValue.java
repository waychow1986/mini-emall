/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables;


import com.azure.csu.tiger.product.jooq.Keys;
import com.azure.csu.tiger.product.jooq.ProductCenter;
import com.azure.csu.tiger.product.jooq.tables.records.AttributeValueRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * SPU或SKU属性值表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttributeValue extends TableImpl<AttributeValueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>product_center.attribute_value</code>
     */
    public static final AttributeValue ATTRIBUTE_VALUE = new AttributeValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttributeValueRecord> getRecordType() {
        return AttributeValueRecord.class;
    }

    /**
     * The column <code>product_center.attribute_value.id</code>.
     */
    public final TableField<AttributeValueRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>product_center.attribute_value.spu_or_sku_id</code>. SPU或者SKU id
     */
    public final TableField<AttributeValueRecord, Long> SPU_OR_SKU_ID = createField(DSL.name("spu_or_sku_id"), SQLDataType.BIGINT.nullable(false), this, "SPU或者SKU id");

    /**
     * The column <code>product_center.attribute_value.attribute_id</code>. 属性id
     */
    public final TableField<AttributeValueRecord, Long> ATTRIBUTE_ID = createField(DSL.name("attribute_id"), SQLDataType.BIGINT.nullable(false), this, "属性id");

    /**
     * The column <code>product_center.attribute_value.value</code>. 属性值
     */
    public final TableField<AttributeValueRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.VARCHAR(255).nullable(false), this, "属性值");

    /**
     * The column <code>product_center.attribute_value.create_time</code>.
     */
    public final TableField<AttributeValueRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.attribute_value.modify_time</code>.
     */
    public final TableField<AttributeValueRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.attribute_value.create_user_id</code>.
     */
    public final TableField<AttributeValueRecord, Long> CREATE_USER_ID = createField(DSL.name("create_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>product_center.attribute_value.modify_user_id</code>.
     */
    public final TableField<AttributeValueRecord, Long> MODIFY_USER_ID = createField(DSL.name("modify_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private AttributeValue(Name alias, Table<AttributeValueRecord> aliased) {
        this(alias, aliased, null);
    }

    private AttributeValue(Name alias, Table<AttributeValueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("SPU或SKU属性值表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>product_center.attribute_value</code> table reference
     */
    public AttributeValue(String alias) {
        this(DSL.name(alias), ATTRIBUTE_VALUE);
    }

    /**
     * Create an aliased <code>product_center.attribute_value</code> table reference
     */
    public AttributeValue(Name alias) {
        this(alias, ATTRIBUTE_VALUE);
    }

    /**
     * Create a <code>product_center.attribute_value</code> table reference
     */
    public AttributeValue() {
        this(DSL.name("attribute_value"), null);
    }

    public <O extends Record> AttributeValue(Table<O> child, ForeignKey<O, AttributeValueRecord> key) {
        super(child, key, ATTRIBUTE_VALUE);
    }

    @Override
    public Schema getSchema() {
        return ProductCenter.PRODUCT_CENTER;
    }

    @Override
    public Identity<AttributeValueRecord, Long> getIdentity() {
        return (Identity<AttributeValueRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AttributeValueRecord> getPrimaryKey() {
        return Keys.KEY_ATTRIBUTE_VALUE_PRIMARY;
    }

    @Override
    public List<UniqueKey<AttributeValueRecord>> getKeys() {
        return Arrays.<UniqueKey<AttributeValueRecord>>asList(Keys.KEY_ATTRIBUTE_VALUE_PRIMARY);
    }

    @Override
    public AttributeValue as(String alias) {
        return new AttributeValue(DSL.name(alias), this);
    }

    @Override
    public AttributeValue as(Name alias) {
        return new AttributeValue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AttributeValue rename(String name) {
        return new AttributeValue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AttributeValue rename(Name name) {
        return new AttributeValue(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, String, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
