/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables.records;


import com.azure.csu.tiger.product.jooq.tables.AttributeCategory;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 类目属性关联表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttributeCategoryRecord extends UpdatableRecordImpl<AttributeCategoryRecord> implements Record8<Long, Long, Long, Byte, LocalDateTime, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>product_center.attribute_category.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>product_center.attribute_category.category_id</code>. 类目id
     */
    public void setCategoryId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.category_id</code>. 类目id
     */
    public Long getCategoryId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>product_center.attribute_category.attribute_id</code>. 属性id
     */
    public void setAttributeId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.attribute_id</code>. 属性id
     */
    public Long getAttributeId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>product_center.attribute_category.is_required</code>. 是否必填 0-否，1-是
     */
    public void setIsRequired(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.is_required</code>. 是否必填 0-否，1-是
     */
    public Byte getIsRequired() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>product_center.attribute_category.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>product_center.attribute_category.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>product_center.attribute_category.create_user_id</code>.
     */
    public void setCreateUserId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.create_user_id</code>.
     */
    public Long getCreateUserId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>product_center.attribute_category.modify_user_id</code>.
     */
    public void setModifyUserId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>product_center.attribute_category.modify_user_id</code>.
     */
    public Long getModifyUserId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, Byte, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, Byte, LocalDateTime, LocalDateTime, Long, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.ID;
    }

    @Override
    public Field<Long> field2() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.CATEGORY_ID;
    }

    @Override
    public Field<Long> field3() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.ATTRIBUTE_ID;
    }

    @Override
    public Field<Byte> field4() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.IS_REQUIRED;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.MODIFY_TIME;
    }

    @Override
    public Field<Long> field7() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.CREATE_USER_ID;
    }

    @Override
    public Field<Long> field8() {
        return AttributeCategory.ATTRIBUTE_CATEGORY.MODIFY_USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCategoryId();
    }

    @Override
    public Long component3() {
        return getAttributeId();
    }

    @Override
    public Byte component4() {
        return getIsRequired();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component6() {
        return getModifyTime();
    }

    @Override
    public Long component7() {
        return getCreateUserId();
    }

    @Override
    public Long component8() {
        return getModifyUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCategoryId();
    }

    @Override
    public Long value3() {
        return getAttributeId();
    }

    @Override
    public Byte value4() {
        return getIsRequired();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value6() {
        return getModifyTime();
    }

    @Override
    public Long value7() {
        return getCreateUserId();
    }

    @Override
    public Long value8() {
        return getModifyUserId();
    }

    @Override
    public AttributeCategoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value2(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value3(Long value) {
        setAttributeId(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value4(Byte value) {
        setIsRequired(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value6(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value7(Long value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord value8(Long value) {
        setModifyUserId(value);
        return this;
    }

    @Override
    public AttributeCategoryRecord values(Long value1, Long value2, Long value3, Byte value4, LocalDateTime value5, LocalDateTime value6, Long value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AttributeCategoryRecord
     */
    public AttributeCategoryRecord() {
        super(AttributeCategory.ATTRIBUTE_CATEGORY);
    }

    /**
     * Create a detached, initialised AttributeCategoryRecord
     */
    public AttributeCategoryRecord(Long id, Long categoryId, Long attributeId, Byte isRequired, LocalDateTime createTime, LocalDateTime modifyTime, Long createUserId, Long modifyUserId) {
        super(AttributeCategory.ATTRIBUTE_CATEGORY);

        setId(id);
        setCategoryId(categoryId);
        setAttributeId(attributeId);
        setIsRequired(isRequired);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
        setCreateUserId(createUserId);
        setModifyUserId(modifyUserId);
    }
}
