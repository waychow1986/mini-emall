/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.product.jooq.tables;


import com.azure.csu.tiger.product.jooq.Keys;
import com.azure.csu.tiger.product.jooq.ProductCenter;
import com.azure.csu.tiger.product.jooq.tables.records.CategoryBrandRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 类目品牌关联表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoryBrand extends TableImpl<CategoryBrandRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>product_center.category_brand</code>
     */
    public static final CategoryBrand CATEGORY_BRAND = new CategoryBrand();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CategoryBrandRecord> getRecordType() {
        return CategoryBrandRecord.class;
    }

    /**
     * The column <code>product_center.category_brand.id</code>.
     */
    public final TableField<CategoryBrandRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>product_center.category_brand.category_id</code>. 类目id
     */
    public final TableField<CategoryBrandRecord, Long> CATEGORY_ID = createField(DSL.name("category_id"), SQLDataType.BIGINT.nullable(false), this, "类目id");

    /**
     * The column <code>product_center.category_brand.brand_id</code>. 品牌id
     */
    public final TableField<CategoryBrandRecord, Long> BRAND_ID = createField(DSL.name("brand_id"), SQLDataType.BIGINT.nullable(false), this, "品牌id");

    /**
     * The column <code>product_center.category_brand.create_time</code>.
     */
    public final TableField<CategoryBrandRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>product_center.category_brand.create_user_id</code>.
     */
    public final TableField<CategoryBrandRecord, Long> CREATE_USER_ID = createField(DSL.name("create_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private CategoryBrand(Name alias, Table<CategoryBrandRecord> aliased) {
        this(alias, aliased, null);
    }

    private CategoryBrand(Name alias, Table<CategoryBrandRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("类目品牌关联表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>product_center.category_brand</code> table reference
     */
    public CategoryBrand(String alias) {
        this(DSL.name(alias), CATEGORY_BRAND);
    }

    /**
     * Create an aliased <code>product_center.category_brand</code> table reference
     */
    public CategoryBrand(Name alias) {
        this(alias, CATEGORY_BRAND);
    }

    /**
     * Create a <code>product_center.category_brand</code> table reference
     */
    public CategoryBrand() {
        this(DSL.name("category_brand"), null);
    }

    public <O extends Record> CategoryBrand(Table<O> child, ForeignKey<O, CategoryBrandRecord> key) {
        super(child, key, CATEGORY_BRAND);
    }

    @Override
    public Schema getSchema() {
        return ProductCenter.PRODUCT_CENTER;
    }

    @Override
    public Identity<CategoryBrandRecord, Long> getIdentity() {
        return (Identity<CategoryBrandRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CategoryBrandRecord> getPrimaryKey() {
        return Keys.KEY_CATEGORY_BRAND_PRIMARY;
    }

    @Override
    public List<UniqueKey<CategoryBrandRecord>> getKeys() {
        return Arrays.<UniqueKey<CategoryBrandRecord>>asList(Keys.KEY_CATEGORY_BRAND_PRIMARY);
    }

    @Override
    public CategoryBrand as(String alias) {
        return new CategoryBrand(DSL.name(alias), this);
    }

    @Override
    public CategoryBrand as(Name alias) {
        return new CategoryBrand(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CategoryBrand rename(String name) {
        return new CategoryBrand(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CategoryBrand rename(Name name) {
        return new CategoryBrand(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, LocalDateTime, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
