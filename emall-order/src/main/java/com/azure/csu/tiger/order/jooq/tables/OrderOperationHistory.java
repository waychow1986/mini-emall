/*
 * This file is generated by jOOQ.
 */
package com.azure.csu.tiger.order.jooq.tables;


import com.azure.csu.tiger.order.jooq.Keys;
import com.azure.csu.tiger.order.jooq.OrderCenter;
import com.azure.csu.tiger.order.jooq.tables.records.OrderOperationHistoryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 订单操作记录表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderOperationHistory extends TableImpl<OrderOperationHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>order_center.order_operation_history</code>
     */
    public static final OrderOperationHistory ORDER_OPERATION_HISTORY = new OrderOperationHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderOperationHistoryRecord> getRecordType() {
        return OrderOperationHistoryRecord.class;
    }

    /**
     * The column <code>order_center.order_operation_history.id</code>.
     */
    public final TableField<OrderOperationHistoryRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>order_center.order_operation_history.order_id</code>. 订单id
     */
    public final TableField<OrderOperationHistoryRecord, Long> ORDER_ID = createField(DSL.name("order_id"), SQLDataType.BIGINT.nullable(false), this, "订单id");

    /**
     * The column <code>order_center.order_operation_history.order_status</code>. 待支付-0, 已支付-1, 已发货-2, 已完成-3, 已取消-4
     */
    public final TableField<OrderOperationHistoryRecord, Byte> ORDER_STATUS = createField(DSL.name("order_status"), SQLDataType.TINYINT, this, "待支付-0, 已支付-1, 已发货-2, 已完成-3, 已取消-4");

    /**
     * The column <code>order_center.order_operation_history.operation_note</code>. 备注
     */
    public final TableField<OrderOperationHistoryRecord, String> OPERATION_NOTE = createField(DSL.name("operation_note"), SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>order_center.order_operation_history.create_time</code>.
     */
    public final TableField<OrderOperationHistoryRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>order_center.order_operation_history.operate_user_id</code>.
     */
    public final TableField<OrderOperationHistoryRecord, Long> OPERATE_USER_ID = createField(DSL.name("operate_user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private OrderOperationHistory(Name alias, Table<OrderOperationHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderOperationHistory(Name alias, Table<OrderOperationHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("订单操作记录表"), TableOptions.table());
    }

    /**
     * Create an aliased <code>order_center.order_operation_history</code> table reference
     */
    public OrderOperationHistory(String alias) {
        this(DSL.name(alias), ORDER_OPERATION_HISTORY);
    }

    /**
     * Create an aliased <code>order_center.order_operation_history</code> table reference
     */
    public OrderOperationHistory(Name alias) {
        this(alias, ORDER_OPERATION_HISTORY);
    }

    /**
     * Create a <code>order_center.order_operation_history</code> table reference
     */
    public OrderOperationHistory() {
        this(DSL.name("order_operation_history"), null);
    }

    public <O extends Record> OrderOperationHistory(Table<O> child, ForeignKey<O, OrderOperationHistoryRecord> key) {
        super(child, key, ORDER_OPERATION_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return OrderCenter.ORDER_CENTER;
    }

    @Override
    public Identity<OrderOperationHistoryRecord, Long> getIdentity() {
        return (Identity<OrderOperationHistoryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<OrderOperationHistoryRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_OPERATION_HISTORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<OrderOperationHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderOperationHistoryRecord>>asList(Keys.KEY_ORDER_OPERATION_HISTORY_PRIMARY);
    }

    @Override
    public OrderOperationHistory as(String alias) {
        return new OrderOperationHistory(DSL.name(alias), this);
    }

    @Override
    public OrderOperationHistory as(Name alias) {
        return new OrderOperationHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderOperationHistory rename(String name) {
        return new OrderOperationHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderOperationHistory rename(Name name) {
        return new OrderOperationHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Byte, String, LocalDateTime, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
